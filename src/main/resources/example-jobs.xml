<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd 
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<!-- Global level -->
	<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
    	<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	    <property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<bean id="syncTaskExecutor" class="org.springframework.core.task.SyncTaskExecutor" />
	<bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
	
	<!-- Job Level -->
	<bean id="exampleFileSourceReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:#{jobParameters['file']}" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id,name" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="exampleFileMapper" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="exampleMultiWriters" class="org.springframework.batch.item.support.ClassifierCompositeItemWriter" scope="step">
		<property name="classifier" ref="classifier" />
	</bean>

	<bean id="classifier" class="org.springframework.batch.classify.BackToBackPatternClassifier">
		<property name="routerDelegate">
			<bean class="com.itservicesdepot.example.springbatch.writer.ExampleWriterRouteImpl" />
		</property>
		<property name="matcherMap">
			<map>
				<entry key="under16" value-ref="under16Writer" />
				<entry key="over16" value-ref="over16Writer" />
			</map>
		</property>
	</bean>

	<bean id="under16Writer" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this csv file -->
		<property name="resource" value="file:c:/work/spring-batch/file/under16.csv" />
		<property name="shouldDeleteIfExists" value="true" />
		<property name="shouldDeleteIfEmpty" value="true" />
		<property name="appendAllowed" value="true" />

		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, name" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="over16Writer" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this csv file -->
		<property name="resource" value="file:c:/work/spring-batch/file/over16.csv" />
		<property name="shouldDeleteIfExists" value="true" />
		<property name="shouldDeleteIfEmpty" value="true" />
		<property name="appendAllowed" value="true" />

		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, name" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="exampleFileMapper" class="com.itservicesdepot.example.springbatch.model.SoccerPlayerEntry" scope="prototype"/>
	
	<!-- This is to demo Multiple Writers -->
	<job id="exampleMultiWritersJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="stepMultiWriters">
			<tasklet>
				<chunk reader="exampleFileSourceReader" writer="exampleMultiWriters" commit-interval="10">
					<streams>
						<batch:stream ref="under16Writer" />
						<batch:stream ref="over16Writer" />
					</streams>
				</chunk>
			</tasklet>
		</step>
	</job>
</beans>